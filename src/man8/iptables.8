. mso zh.tmac
.TH Iptables 8 "iptables 中文手册" ""
.SH NAME 
iptables - IP包过滤器管理

.SH 总览
iptables -ADC  指定链的规则  [-A  添加 -D 删除 -C 修改]
.br
iptables - RI 
.br
iptables -D chain rule num[option]
.br
iptables -LFZ 链名 [选项]
.br
iptables -[NX] 指定链
.br
iptables -P chain target[options]
.br
iptables -E old-chain-name new-chain-name

.SH 说明
Iptalbes 是用来设置、维护和检查Linux内核的IP包过滤规则的。 

可以定义不同的表，每个表都包含几个内部的链，也能包含用户定义的链。
每个链都是一个规则列表，对对应的包进行匹配：每条规则指定应当如何处
理与之相匹配的包。这被称作'target'（目标），也可以跳向同一个表内的用
户定义的链。

.SH TARGETS
防火墙的规则指定所检查包的特征，和目标。如果包不匹配，将送往该链中
下一条规则检查；如果匹配,那么下一条规则由目标值确定.该目标值可以是
用户定义的链名,或是某个专用值,如ACCEPT[通过], DROP[删除],
QUEUE[排队],或者 RETURN[返回]。
.PP
.I ACCEPT
 表示让这个包通过。
.br
.I DROP
 表示将这个包丢弃。
.br
.I QUEUE
 表示把这个包传递到用户空间。
.br
.I RETURN
 表示停止这条链的匹配，到前一个链的规则重新开始。如果到达了一个内建的
 链(的末端)，或者遇到内建链的规则是 RETURN，包的命运将由链准则指定的
 目标决定。

.SH TABLES
当前有三个表（哪个表是当前表取决于内核配置选项和当前模块)。
.TP
.B "-t table"
这个选项指定命令要操作的匹配包的表。如果内核被配置为自动加载模块，这时
若模块没有加载，(系统)将尝试(为该表)加载适合的模块。

这些表如下：
.TP
.BR "filter"
,这是默认的表，包含了内建的链INPUT（处理进入的包）、FORWORD（处理通
过的包）和OUTPUT（处理本地生成的包）。
.TP
.BR "nat"
这个表被查询时表示遇到了产生新的连接的包,由三个内建的链构成：PREROUTING
 (修改到来的包)、OUTPUT（修改路由之前本地的包）、POSTROUTING
 （修改准备出去的包）。
.TP
.BR "mangle"
 这个表用来对指定的包进行修改。它有两个内建规则：PREROUTING（修改路由之
 前进入的包）和OUTPUT（修改路由之前本地的包）。

.SH OPTIONS
这些可被iptables识别的选项可以区分不同的种类。
.SS COMMANDS
这些选项指定执行明确的动作：若指令行下没有其他规定,该行只能指定一个选项.
对于长格式的命令和选项名,所用字母长度只要保证iptables能从其他选项中区
分出该指令就行了。
.TP
.BR "-A -append"
在所选择的链末添加一条或更多规则。当源（地址）或者/与 目的（地址）转换
为多于一个(多个)地址时，这条规则会加到所有可能的地址(组合)后面。
.TP
.BR "-D -delete"
从所选链中删除一条或更多规则。这条命令可以有两种方法：可以把被删除规则
指定为链中的序号(第一条序号为1),或者指定为要匹配的规则。
.TP
.BR "-R -replace"
从选中的链中取代一条规则。如果源（地址）或者/与 目的（地址）被转换为多地
址，该命令会失败。规则序号从1开始。
.TP
.BR "-I -insert"
根据给出的规则序号向所选链中插入一条或更多规则。所以，如果规则序号为1，
规则会被插入链的头部。这也是不指定规则序号时的默认方式。
.TP
.BR "-L -list"
显示所选链的所有规则。如果没有选择链，所有链将被显示。也可以和z选项一起
使用，这时链会被自动列出和归零。精确输出受其它所给参数影响。
.TP
.BR "-F -flush"
清空所选链。这等于把所有规则一个个的删除。
.TP
.BR "--Z -zero"
把所有链的包及字节的计数器清空。它可以和 -L配合使用，在清空前察看计数器，请参见前文。
.TP
.BR "-N -new-chain"
根据给出的名称建立一个新的用户定义链。这必须保证没有同名的链存在。
.TP
.BR "-X -delete-chain"
删除指定的用户自定义链。这个链必须没有被引用，如果被引用，在删除之前你必须删
除或者替换与之有关的规则。如果没有给出参数，这条命令将试着删除每个非
内建的链。
.TP
.BR "-P -policy"
设置链的目标规则。
.TP
.BR "-E -rename-chain"
根据用户给出的名字对指定链进行重命名，这仅仅是修饰，对整个表的结构没有影响。
TARGETS参数给出一个合法的目标。只有非用户自定义链可以使用规则，而且内建链和用
户自定义链都不能是规则的目标。
.TP
.BR "-h Help."
帮助。给出当前命令语法非常简短的说明。
.SS 参数
以下参数构成规则详述，如用于add、delete、replace、append 和 check命令。
.TP
.BR "-p -protocal [!]protocol"
规则或者包检查(待检查包)的协议。指定协议可以是tcp、udp、icmp中的一个或
者全部，也可以是数值，代表这些协议中的某一个。当然也可以使用在/etc/pro
tocols中定义的协议名。在协议名前加上"!"表示相反的规则。数字0相当于所有
all。Protocol all会匹配所有协议，而且这是缺省时的选项。在和check命令结合
时，all可以不被使用。
.TP
.BR "-s -source [!] address[/mask]"
指定源地址，可以是主机名、网络名和清楚的IP地址。mask说明可以是网络掩码
或清楚的数字，在网络掩码的左边指定网络掩码左边”1”的个数，因此，mask
值为24等于255.255.255.0。在指定地址前加上"!"说明指定了相反的地址段。标志
 --src 是这个选项的简写。
.TP
.BR "-d --destination [!] address[/mask]"
指定目标地址，要获取详细说明请参见 -s标志的说明。标志 --dst 是这个选项的简写。
.TP
.BR "-j --jump target"
(-j 目标跳转)指定规则的目标；也就是说，如果包匹配应当做什么。目标可以是用
户自定义链（不是这条规则所在的），某个会立即决定包的命运的专用内建目标，
或者一个扩展（参见下面的EXTENSIONS）。如果规则的这个选项被忽略，那么匹
配的过程不会对包产生影响，不过规则的计数器会增加。
.TP
.BR "-i -in-interface [!] [name]"
(i -进入的（网络）接口 [!][名称])这是包经由该接口接收的可选的入口名称，包通过
该接口接收（在链INPUT、FORWORD和PREROUTING中进入的包）。当在接口名
前使用"!"说明后，指的是相反的名称。如果接口名后面加上"+"，则所有以此接口名
开头的接口都会被匹配。如果这个选项被忽略，会假设为"+"，那么将匹配任意接口。
.TP
.BR "-o --out-interface [!][name]"
(-o --输出接口[名称])这是包经由该接口送出的可选的出口名称，包通过该口输出（在
链FORWARD、OUTPUT和POSTROUTING中送出的包）。当在接口名前使用"!"说明
后，指的是相反的名称。如果接口名后面加上"+"，则所有以此接口名开头的接口都会
被匹配。如果这个选项被忽略，会假设为"+"，那么将匹配所有任意接口。
.TP
.BR "[!] -f, --fragment"
( [!] -f --分片)这意味着在分片的包中，规则只询问第二及以后的片。自那以后由于无
法判断这种把包的源端口或目标端口（或者是ICMP类型的），这类包将不能匹配任
何指定对他们进行匹配的规则。如果"!"说明用在了"-f"标志之前，表示相反的意思。
TP
.B "-c, --set-counters " "PKTS BYTES"
This enables the administrater to initialize the packet and byte
counters of a rule (during
.B INSERT,
.B APPEND,
.B REPLACE
operations)

.SS 其他选项
还可以指定下列附加选项：
.TP
.BR "-v --verbose"
详细输出。这个选项让list命令显示接口地址、规则选项（如果有）和TOS
（Type of Service）掩码。包和字节计数器也将被显示，分别用K、M、G
(前缀)表示1000、1,000,000和1,000,000,000倍（不过请参看-x标志改变它），
对于添加,插入,删除和替换命令，这会使一个或多个规则的相关详细信息被打印。
.TP
.BR "-n --numeric"
数字输出。IP地址和端口会以数字的形式打印。默认情况下，程序试显
示主机名、网络名或者服务（只要可用）。
.TP
.BR "-x -exact"
扩展数字。显示包和字节计数器的精确值，代替用K,M,G表示的约数。
这个选项仅能用于 -L 命令。
.TP
.BR "--line-numbers"
当列表显示规则时，在每个规则的前面加上行号，与该规则在链中的位置相对应。

.SH 对应的扩展
iptables能够使用一些与模块匹配的扩展包。以下就是含于基本包内的
扩展包，而且他们大多数都可以通过在前面加上!来表示相反的意思。

.SS tcp
当 --protocol tcp 被指定,且其他匹配的扩展未被指定时,这些扩展被装载。它提供以下选项：
.TP
.BR "--source-port [!] [port[:port]]"
源端口或端口范围指定。这可以是服务名或端口号。使用格式端口：端口也可以
指定包含的（端口）范围。如果首端口号被忽略，默认是"0"，如果末端口号被忽
略，默认是"65535"，如果第二?龆丝诤糯笥诘谝桓觯?敲此?腔岜唤换弧Ｕ飧鲅∠羁梢允褂? --sport的别名。
.TP
.BR "--destionation-port [!] [port:[port]]"
目标端口或端口范围指定。这个选项可以使用 --dport别名来代替。
.TP
.BR "--tcp-flags [!] mask comp"
匹配指定的TCP标记。第一个参数是我们要检查的标记，一个用逗号分开的列表，
第二个参数是用逗号分开的标记表,是必须被设置的。标记如下：SYN ACK FIN
 RST URG PSH ALL NONE。因此这条命令：iptables -A FORWARD -p tcp --tcp-flags SYN, ACK,
 FIN, RST SYN只匹配那些SYN标记被设置而ACK、FIN和RST标记没有设置的包。
.TP
.BR "[!] --syn"
只匹配那些设置了SYN位而清除了ACK和FIN位的TCP包。这些包用于TCP连接初始
化时发出请求；例如，大量的这种包进入一个接口发生堵塞时会阻止进入的TCP连接
，而出去的TCP连接不会受到影响。这等于 --tcp-flags SYN, RST, ACK SYN。如果
"--syn"前面有"!"标记，表示相反的意思。
.TP
.BR "--tcp-option [!] number"
匹配设置了TCP选项的。

.SS udp
当protocol udp 被指定,且其他匹配的扩展未被指定时,这些扩展被装载,它提供以下选项：
.TP
.BR "--source-port [!] [port:[port]]"
源端口或端口范围指定。详见 TCP扩展的--source-port选项说明。
.TP
.BR "--destination-port [!] [port:[port]]"
目标端口或端口范围指定。详见 TCP扩展的--destination-port选项说明。

.SS icmp
当protocol icmp被指定,且其他匹配的扩展未被指定时,该扩展被装载。它提供以下选项：
.TP
.BR "--icmp-type [!] typename"
这个选项允许指定ICMP类型，可以是一个数值型的ICMP?嘈停?蛘呤悄掣鲇擅??
.br
iptables -p icmp -h
.br
所显示的ICMP类型名。

.SS mac
.TP
.BR "--mac-source [!] address"
匹配物理地址。必须是XX:XX:XX:XX:XX这样的格式。注意它只对来自以太设备并
进入PREROUTING、FORWORD和INPUT链的包有效。

.SS limit
这个模块匹配标志用一个标记桶过滤器一一定速度进行匹配,它和LOG
目标结合使用来给出有限的登陆数.当达到这个极限值时,使用这个扩展
包的规则将进行匹配.(除非使用了
”!”标记)
.TP
.BR "--limit rate"
最大平均匹配速率：可赋的值有'/second', '/minute', '/hour', or '/day'这样的单位，默认是3/hour。
.TP
.BR "--limit-burst number"
待匹配包初始个数的最大值:若前面指定的极限还没达到这个数值,则概数字加1.默认值为5
.TP
.BR "multiport"
这个模块匹配一组源端口或目标端口,最多可以指定15个端口。只能和-p tcp 或者 -p udp 连着使用。
.TP
.BR "--source-port [port[, port]]"
如果源端口是其中一个给定端口则匹配
.TP
.BR "--destination-port [port[, port]]"
如果目标端口是其中一个给定端口则匹配
.TP
.BR "--port [port[, port]]"
若源端口和目的端口相等并与某个给定端口相等,则匹配。

.SS mark
这个模块和与netfilter过滤器标记字段匹配（就可以在下面设置为使用MARK标记）。
.TP
.BR "--mark value [/mask]"
匹配那些无符号标记值的包（如果指定mask，在比较之前会给掩码加上逻辑的标记）。

.SS owner
此模块试为本地生成包匹配包创建者的不同特征。
只能用于OUTPUT链，而且即使这样一些包（如ICMP ping应答）还
可能没有所有者，因此永远不会匹配。
.TP
.BR "--uid-owner userid"
如果给出有效的user id，那么匹配它的进程产生的包。
.TP
.BR "--gid-owner groupid"
如果给出有效的group id，那么匹配它的进程产生的包。
.TP
.BR "--sid-owner seessionid"
根据给出的会话组匹配该进程产生的包。

.SS state
此模块，当与连接跟踪结合使用时，允许访问包的连接跟踪状态。
.TP
.BR "--state state"
这里state是一个逗号分割的匹配连接状态列表。可能的状态是:INVALID
表示包是未知连接，ESTABLISHED表示是双向传送的连接，NEW表示包
为新的连接，否则是非双向传送的，而RELATED表示包由新连接开始，但
是和一个已存在的连接在一起，如FTP数据传送，或者一个ICMP错误。

.SS unclean
此模块没有可选项，不过它试着匹配那些奇怪的、不常见的包。处在实验中。

.SS tos
此模块匹配IP包首部的8位tos（服务类型）字段（也就是说，包含在优先位中）。
.TP
.BR "--tos tos"
这个参数可以是一个标准名称，（用iptables -m tos -h 察看该列表），或者数值。

.SH TARGET EXTENSIONS
iptables可以使用扩展目标模块：以下都包含在标准版中。

.SS LOG
为匹配的包开启内核记录。当在规则中设置了这一选项后，linux内核会通
过printk()打印一些关于全部匹配包的信息（诸如IP包头字段等）。
.TP
.BR "--log-level level"
记录级别（数字或参看 syslog.conf(5)）。
.TP
.BR "--log-prefix prefix"
在纪录信息前加上特定的前缀：最多14个字母长，用来和记录中其他信息区别。
.TP
.BR "--log-tcp-sequence"
记录TCP序列号。如果记录能被用户读取那么这将存在安全隐患。
.TP
.BR "--log-tcp-options"
记录来自TCP包头部的选项。
.TP
.BR "--log-ip-options"
记录来自IP包头部的选项。

.SS MARK
用来设置包的netfilter标记值。只适用于mangle表。
.TP
.BR "--set-mark mark"

.SS REJECT
作为对匹配的包的响应，返回一个错误的包：其他情况下和DROP相同。
此目标只适用于INPUT、FORWARD和OUTPUT链，和调用这些链的用
户自定义链。这几个选项控制返回的错误包的特性：
.TP
.BR "--reject-with type"
Type可以是icmp-net-unreachable、icmp-host-unreachable、icmp-port-nreachable、icmp-prot
o-unreachable、 icmp-net-prohibited 或者
 icmp-host-prohibited，该类型会返回相应的ICMP错误信息（默认是port-unreachable）。选项
 echo-reply也是允许的；它只能用于指定ICMP
 ping包的规则中，生成ping的回应。最后，选项tcp-reset可以用于在INPUT链中,或
 自INPUT链调用的规则，只匹配TCP协议：将回应一个TCP
 RST包。

.SS TOS
用来设置IP包的首部八位tos。只能用于mangle表。
.TP
.BR "--set-tos tos"
你可以使用一个数值型的TOS 值，或者用iptables -j TOS -h 来查看有效TOS名列表。
.SS MIRROR
这是一个试验示范目标，可用于转换IP首部字段中的源地址和目标地址，
再传送该包,并只适用于INPUT、FORWARD和OUTPUT链，以及只调用它们的用户自定义链
。

.SS SNAT
这个目标只适用于nat表的POSTROUTING链。它规定修改包的源地
址（此连接以后所有的包都会被影响），停止对规则的检查，它包含选项：
.TP
.BR "--to-source <ipaddr>[-<ipaddr>][:port-port]"
可以指定一个单一的新的IP地址，一个IP地址范围，也可以附加一个端口范围
（只能在指定-p tcp 或者-p udp的规则里）。如果未指定端口范围，源端口中
512以下的（端口）会被安置为其他的512以下的端口；512到1024之间的端口
会被安置为1024以下的，其他端口会被安置为1024或以上。如果可能，
端口不会被修改。
.TP
.BR "--to-destiontion <ipaddr>[-<ipaddr>][:port-port]"
可以指定一个单一的新的IP地址，一个IP地址范围，也可以附加一个端口范围（只能在指定-p tcp 或者-p
 udp的规则里）。如果未指定端口范围，目标端口不会被修改。

.SS MASQUERADE
只用于nat表的POSTROUTING链。只能用于动态获取IP（拨号）连接：如果你拥有静态IP
地址，你要用SNAT。伪装相当于给包发出时所经过接口的IP地址设置一个映像，当接口关
闭连接会终止。这是因为当下一次拨号时未必是相同的接口地址（以后所有建立的连接都将
关闭）。它有一个选项：
.TP
.BR "--to-ports <port>[-port>]"
指定使用的源端口范围，覆盖默认的SNAT源地址选择（见上面）。这个选项只适用于指定
了-p tcp或者-p udp的规则。

.SS REDIRECT
只适用于nat表的PREROUTING和OUTPUT链，和只调用它们的用户自定义链。它修改包的
目标IP地址来发送包到机器自身（本地生成的包被安置为地址127.0.0.1）。它包含一
个选项：
.TP
.BR "--to-ports <port>[<port>]"
指定使用的目的端口或端口范围：不指定的话，目标端口不会被修改。只能用于指定了-p tcp 或 -p udp的规则。

.SH 诊断
不同的错误信息会打印成标准错误：退出代码0表示正确。类似于不对的或者滥用的命令
行参数错误会返回错误代码2，其他错误返回代码为1。

.SH 臭虫
检查还未完成。

.SH COMPATIBILITY WITH IPCHAINS
与ipchains的兼容性

This iptables is very similar to ipchains by Rusty Russell. The main difference
 is that the chains INPUT and OUTPUT are only traversed for packets coming into
 the local host and originating from the local host respectively. Hence every
 pack only passes through one of the three chains; previously a forwarded packet
 would pass through all three. The other main difference is that -I refers to
 input interface; -o refers to the output interface, and both are available for
 packets entering the FORWARD chain. iptables is a pure packet filter when using
 the default filter' table, with optional extension modules. This should
 simplify much of the previous confusion over the combination of IP masquerading
 and packet filtering seen previously. So the following options are handled
 differently:
-j MASQ
-M -S
-M -L
There are several other chaines in iptables
iptables和Rusty Russell的ipchains非常相似。主要区别是INPUT 链只用于进入本
地主机的包,而OUTPUT只用于自本地主机生成的包。因此每个包只经过三个链的
一个；以前转发的包会经过所有三个链。其他主要区别是 -i 引用进入接口；-o引
用输出接口，两者都适用于进入FORWARD链的包。当和可选扩展模块一起使用
默认过滤器表时，iptables是一个纯粹的包过滤器。这能大大减少以前对IP伪装和
包过滤结合使用的混淆，所以以下选项作了不同的处理：
-j MASQ
-M -S
-M -L
在iptables中有几个不同的链。

.SH 参见
iptables-HOWTO有详细的iptables用法,对netfilter-hacking-HOWTO也有详细的本质说明。

.SH 作者
Rusty Russell wrote iptables, in early consultation with Michael Neuling.
Marc  Boucher  made Rusty abandon ipnatctl by lobbying for a generic packet
 selection framework in iptables, then wrote the mangle table, the owner match,
 the  mark  stuff,  and  ranaround doing cool stuff everywhere.
James Morris wrote the TOS target, and tos match.
Jozsef Kadlecsik wrote the REJECT target.
The Netfilter Core Team is: Marc Boucher, Rusty Russell.
.TP
                           Mar 20, 2000
.br

.SH "[中文版维护人]"
.B 杨鹏·NetSnake <netsnake@963.net>
.\" 湖北省恩施市东风大道22号《恩施日报》社
.\" 445000
.\" 0718-8260030
.SH "[中文版最新更新]"
.BR 2003.11.20
.SH "《中国linux论坛man手册页翻译计划》:"
.BI http://cmpp.linuxforum.net
