. mso zh.tmac
.\" auto-generated by docbook2man-spec $Revision: 1.1 $
.TH "POSTGRES" "1" "2003-11-02" "Application" "PostgreSQL Server Applications"
.SH NAME
postgres \- 以单用户模式运行一个 PostgreSQL服务器

.SH SYNOPSIS
.sp
\fBpostgres\fR\fR [ \fR\fB-A  \fR\fB 0\fR | \fB1\fR\fB \fR\fR]\fR\fR [ \fR\fB-B \fInbuffers\fB \fR\fR]\fR\fR [ \fR\fB-c \fIname\fB=\fIvalue\fB \fR\fR]\fR\fR [ \fR\fB-d \fIdebug-level\fB \fR\fR]\fR\fR [ \fR\fB--describe-config \fR\fR]\fR\fR [ \fR\fB-D \fIdatadir\fB \fR\fR]\fR\fR [ \fR\fB-e \fR\fR]\fR\fR [ \fR\fB-E \fR\fR]\fR\fR [ \fR\fB-f \fR\fB s\fR | \fBi\fR | \fBt\fR | \fBn\fR | \fBm\fR | \fBh\fR\fB \fR\fR]\fR\fR [ \fR\fB-F \fR\fR]\fR\fR [ \fR\fB-N \fR\fR]\fR\fR [ \fR\fB-o \fIfilename\fB \fR\fR]\fR\fR [ \fR\fB-O \fR\fR]\fR\fR [ \fR\fB-P \fR\fR]\fR \fR[\fR \fB-s\fR\fR | \fR\fB-t \fR\fB pa\fR | \fBpl\fR | \fBex\fR\fB\fR\fR ]\fR\fR [ \fR\fB-S \fIsort-mem\fB \fR\fR]\fR\fR [ \fR\fB-W \fIseconds\fB \fR\fR]\fR\fR [ \fR\fB--\fIname\fB=\fIvalue\fB \fR\fR]\fR \fB\fIdatabase\fB\fR

\fBpostgres\fR\fR [ \fR\fB-A  \fR\fB 0\fR | \fB1\fR\fB \fR\fR]\fR\fR [ \fR\fB-B \fInbuffers\fB \fR\fR]\fR\fR [ \fR\fB-c \fIname\fB=\fIvalue\fB \fR\fR]\fR\fR [ \fR\fB-d \fIdebug-level\fB \fR\fR]\fR\fR [ \fR\fB-D \fIdatadir\fB \fR\fR]\fR\fR [ \fR\fB-e \fR\fR]\fR\fR [ \fR\fB-f \fR\fB s\fR | \fBi\fR | \fBt\fR | \fBn\fR | \fBm\fR | \fBh\fR\fB \fR\fR]\fR\fR [ \fR\fB-F \fR\fR]\fR\fR [ \fR\fB-o \fIfilename\fB \fR\fR]\fR\fR [ \fR\fB-O \fR\fR]\fR\fR [ \fR\fB-p \fIdatabase\fB \fR\fR]\fR\fR [ \fR\fB-P \fR\fR]\fR \fR[\fR \fB-s\fR\fR | \fR\fB-t \fR\fB pa\fR | \fBpl\fR | \fBex\fR\fB\fR\fR ]\fR\fR [ \fR\fB-S \fIsort-mem\fB \fR\fR]\fR\fR [ \fR\fB-v \fIprotocol\fB \fR\fR]\fR\fR [ \fR\fB-W \fIseconds\fB \fR\fR]\fR\fR [ \fR\fB--\fIname\fB=\fIvalue\fB \fR\fR]\fR
.SH "DESCRIPTION 描述"
.PP
可执行程序 \fBpostgres\fR  是真正处理查询的 PostgreSQL 服务器进程。 通常它是不会被直接调用的；而是启动一个 postmaster 多用户服务器。
.PP
 上面的第二种形式就是 \fBpostmaster\fR(1) 调用 postgres  的方法（只是概念上的，因为 postmaster  和 postgres 实际上是一样的程序）； 我们不能这样直接调用它。第一种形式以交互单用户模式直接调用该服务器。 这种用法的主要用途是在 initdb  做初始化时用。有时候它被用做调试灾难性恢复。
.PP
 当从 shell 上以交互模式调用时，用户可以输入查询并且结果会打印在屏幕上， 不过格式对开发人员更有用，对用户却差好多。 不过请记住，运行一个单用户服务器并不适合于调试该服务器， 因为没有实际的进程间通讯和锁动作发生。
.PP
 当运行一个单用户服务器时，将把会话用户设置为 ID 为 1 的用户。 该用户不必实际存在，因此一个独立运行的服务器可以用于对某些意外损坏的系统表中进行手工恢复。 在独立运行模式下，系统隐含地赋予 ID 为 1 的用户超级用户权限。
.SH "OPTIONS 选项"
.PP
 如果 \fBpostgres\fR 是由一个 \fBpostmaster\fR(1)  启动的，那么它继承后者的所有选项集。另外 \fBpostgres\fR 相关的选项可以用 -o 开关从 \fBpostmaster\fR(1) 传递。
.PP
 你可以通过设置一个配置文件来避免键入这些选项。 参阅Section 16.4获取细节。 有些（安全的）选项还可以从联接过来的客户端设置， 这样就获得了一种应用无关的方法。 比如，如果设置了 \fBPGOPTIONS\fR 环境变量， 那么基于 libpq 的客户端就都把那个字串传递给服务器， 会解释成 postgres 命令行选项。
.SS "GENERAL PURPOSE 通用用途"
.PP
选项 \fB-A\fR, \fB-B\fR,
\fB-c\fR, \fB-d\fR, \fB-D\fR,
\fB-F\fR, 和 \fB--\fIname\fB\fR 和 \fBpostmaster\fR(1)  里的有相同的含义。只是 -d 0 避免 \fBpostmaster\fR(1) 的调试级别传播到 postgres。
.TP
\fB-e\fR
 把缺省日期风格设置为 "European"，也就是说用"DMY"规则解释日期输入， 并且在一些日期输出格式里日子在月份前面打印。 参阅 Section 8.5 ``Date/Time Types'' 获取更多细节。
.TP
\fB-o \fIfilename\fB\fR
 把所有服务器日志输出到 filename。 如果服务器是由 postmaster运行的， 则忽略这个选项，并且使用从 postmaster 继承过来的stderr。
.TP
\fB-P\fR
 扫描/更新系统记录时忽略系统表。对系统表/索引使用 REINDEX 时需要这个选项。
.TP
\fB-s\fR
 在每条命令结束时打印时间信息和其他统计信息。 这个开关对测试性能和调节缓冲区数量有好处。
.TP
\fB-S \fIsort-mem\fB\fR
 声明内部排序和散列在求助于临时磁盘文件之前可以使用的内存数量。 该值是以 KB （千字节）为单位的，缺省是 1024 KB。 注意对于复杂查询，可能有好几个并行的排序和/或散列， 而在它们把数据放到临时文件前，每个都会允许使用最多 \fIsort-mem\fR  KB的内存。
.SS "OPTIONS FOR STAND-ALONE MODE 单用户模式的选项"
.TP
\fB\fIdatabase\fB\fR
 声明要访问的数据库的名字。如果忽略掉则缺省为用户名。
.TP
\fB-E\fR
 回显所有命令。
.TP
\fB-N\fR
 禁止把新行作为语句分隔符。
.SS "SEMI-INTERNAL OPTIONS 半内部选项"
.PP
 还有几个其他的选项可以声明，主要用于调试用途。 这些东西在这里列出只是给 PostgreSQL 系统开发人员使用的。 我们强烈反对使用这些选项。 另外这些选项的任何一项都可能在未来版本中消失而不加说明。
.TP
\fB-f { s | i | m | n | h }\fR
 禁止某种扫描和连接方法的使用： s 和 i  分别关闭顺序和索引扫描，而 n，m，和 h  分别关闭嵌套循环，融合（merge）和散列连接。
.sp
.RS
.B "Note:"
注意:  顺序扫描和嵌套循环都不可能完全被关闭。 -fs 和 -fn  选项仅仅是在存在其他方法时阻 碍优化器使用这些方法罢了。
.RE
.sp
.TP
\fB-O\fR
 允许修改系统表的结构。这个参数用于 \fBinitdb\fR。
.TP
\fB-p \fIdatabase\fB\fR
 告诉服务器服务器它是由一个 postmaster 启动的并声明要使用的数据库等。
.TP
\fB-t pa[rser] | pl[anner] | e[xecutor]\fR
 打印与每个主要系统模块相关的查询记时统计。 它不能和 -s选项一块使用。
.TP
\fB-v \fIprotocol\fB\fR
 声明这次会话使用的前/服务器协议的版本数。
.TP
\fB-W \fIseconds\fB\fR
 一旦看见这个选项，进程就睡眠标出的秒数。 这样就给开发者一些时间把调试器附着在该服务器进程上。
.TP
\fB--describe-config\fR
 这个选项以 tab 分隔的 COPY 格式，倒出服务器内部配置变量，描述和缺省之。 设计它主要是给管理工具使用。
.SH "ENVIRONMENT 环境"
.TP
\fBPGDATA\fR
 缺省数据目录位置
.PP
 对于其它的在单用户模式里有一点点影响的环境变量，请参阅 \fBpostmaster\fR(1).
.PP
.SH "NOTES 注意"
.PP
 要停止运行一个查询，使用 SIGINT 给正在运行该命令的 postgres 进程发信号。
.PP
 要告诉 postgres 重新读取配置文件， 使用一个 SIGHUP 信号。 通常我们最好给 postmaster 发送 SIGHUP； postmaster 将随后 SIGHUP 他的每个子进程。 但是有时候我们可能想只让一个 postgres 进程重装载配置文件。
.PP
\fBpostmaster\fR 使用 SIGTERM 告诉postgres进程正常退出， 而 SIGQUIT 是不
经过正常清理的退出。 这些信号不应该由用户使用。 给一个 postgres 进程发送
SIGKILL 也是不明智的: postmaster 将把这个信号解释成一次在 postgres 里的
崩溃， 并且会强制所有他的子 postgres 进程像在一个标准的崩溃－恢复过程里一
样退出。
.SH "USAGE 用法"
.PP
 用下面这样的命令启动一个独立的服务器
.sp
.nf
\fBpostgres -D /usr/local/pgsql/data \fIother-options\fB my_database\fR
.sp
.fi
 用 -D 给服务器提供正确的数据库目录的路径， 或者确保环境变量 PGDATA 已经正确设置。 同时还要声名你象用的特定数据库名字。
.PP
 通常，独立运行的服务器把换行符当做命令输入完成字符； 它还不懂分号的作用，因为那些东西是在 \fBpsql\fR(1) 里的。 要想把一行分成多行写，你必需在除最后一个换行符以外的每个换行符前面敲一个反斜杠。
.PP
 但是如果你使用 -N 命令行开关，那么换行符就不会中止命令输入。 服务器将从标准输入读取数据，直到碰到文件结尾（EOF）， 然后把输入当做一个单个的命令字串处理。这个时候反斜杠-换行符就不再当做特殊情况处理。
.PP
 要退出会话，键入EOF (通常是 \fBControl\fR+\fBD\fR)。 如果你已经使用了 -N，需要用两个连续的EOF来退出。
.PP
 请注意独立运行的服务器不会提供复杂的行编辑功能（比如，没有命令行历史）。
.SH "SEE ALSO 参见"
.PP
\fBinitdb\fR(1),
\fBipcclean\fR(1),
\fBpostmaster\fR(1)
.SH "译者"
.B Postgresql 中文网站
.B 何伟平 <laser@pgsqldb.org>
