. mso zh.tmac
.TH "CREATELANG" "1" "2003-11-02" "Application" "PostgreSQL Client Applications"
.SH NAME
createlang \- 定义一种新的 PostgreSQL 过程语言

.SH SYNOPSIS
.sp
\fBcreatelang\fR\fR [ \fR\fB\fIconnection-option\fB\fR...\fB \fR\fR]\fR \fB\fIlangname\fB\fR\fR [ \fR\fB\fIdbname\fB \fR\fR]\fR

\fBcreatelang\fR\fR [ \fR\fB\fIconnection-option\fB\fR...\fB \fR\fR]\fR \fR\fR \fB--list\fR\fR | \fR\fB-l\fR\fR\fR \fB\fIdbname\fB\fR
.SH "DESCRIPTION 描述"
.PP
\fBcreatelang\fR 是一个用于向 PostgreSQL 数据库增加新的编程语言的工具。 createlang 可以处理所有 PostgreSQL 版本缺省就提供的语言，但是不能处理其它方面提供的语言。
.PP
 尽管可以用 SQL 命令直接增加后端编程语言，我们还是推荐使用 createlang， 因为它进行了一些检查而且更容易使用。参阅 CREATE LANGUAGE [\fBcreate_language\fR(7)] 获取更多信息。
.SH "OPTIONS 选项"
.PP
\fBcreatelang\fR 接受下列命令行参数：
.TP
\fB\fIlangname\fB\fR
 声明要被定义的过程编程语言的名称。
.TP
\fB[-d] \fIdbname\fB\fR
.TP
\fB[--dbname] \fIdbname\fB\fR
 声明要向哪个数据库增加该语言。 缺省是使用和当前系统用户同名地数据库。
.TP
\fB-e\fR
.TP
\fB--echo\fR
 执行的时候显示所执行的 SQL 命令。
.TP
\fB-l\fR
.TP
\fB--list\fR
 显示一个在目标数据库里已经安装的语言的列表。
.TP
\fB-L \fIdirectory\fB\fR
 声明该语言的解释器所在的目录。 这个目录通常是自动发现的。这个选项主要用于调试。
.PP
.PP
\fBcreatelang\fR 还接受下列命令行参数作为联接参数：
.TP
\fB-h \fIhost\fB\fR
.TP
\fB--host \fIhost\fB\fR
 声明运行服务器的机器的主机名。 如果数值以斜扛开头，则它被用做到 Unix 域套接字的路径。
.TP
\fB-p \fIport\fB\fR
.TP
\fB--port \fIport\fB\fR
 声明服务器侦听着等待连接的互联网 TCP 端口或一个本地 Unix 域套接字文件扩展（描述符）。
.TP
\fB-U \fIusername\fB\fR
.TP
\fB--username \fIusername\fB\fR
 进行联接的用户名。
.TP
\fB-W\fR
.TP
\fB--password\fR
 强制口令提示符。
.PP
.SH "ENVIRONMENT 环境"
.TP
\fBPGDATABASE\fR
.TP
\fBPGHOST\fR
.TP
\fBPGPORT\fR
.TP
\fBPGUSER\fR
 缺省连接参数。
.SH "DIAGNOSTICS 诊断"
.PP
 多数错误信息是自解释的。如果没有，带着 \fB--echo\fR 参数运行 \fBcreatelang\fR  然后在相应的SQL命令下面检查细节。
.SH "NOTES 注意"
.PP
 使用 \fBdroplang\fR(1) 删除一种语言。
.SH "EXAMPLES 例子"
.PP
 把 pltcl 语言安装到数据库 template1里：
.sp
.nf
$ \fBcreatelang pltcl template1\fR
.sp
.fi
.SH "SEE ALSO 参见"
\fBdroplang\fR(1), CREATE LANGUAGE [\fBcreate_language\fR(7)]

.SH "译者"
.B Postgresql 中文网站
.B 何伟平 <laser@pgsqldb.org>
