. mso zh.tmac
.\" auto-generated by docbook2man-spec $Revision: 1.1 $
.TH "BEGIN" "7" "2003-11-02" "SQL - Language Statements" "SQL Commands"
.SH NAME
BEGIN \- 开始一个事务块

.SH SYNOPSIS
.sp
.nf
BEGIN [ WORK | TRANSACTION ]
.sp
.fi
.SH "DESCRIPTION 描述"
.PP
\fBBEGIN\fR 初始化一个事务块， 也就是说所有 BEGIN  命令后的用户语句都将在一个事务里面执行直到给出一个明确的 COMMIT [\fBcommit\fR(7)] 或者 ROLLBACK [\fBrollback\fR(l)] 。
缺省时，（没有 BEGIN），PostgreSQL 以 "autocommit"  模式执行事务，也就是说，每个语句在其自身的事务中执行， 并且在语句结束的时候隐含地执行一个提交（如果执行成功，否则执行回滚）。
.PP
 在事务块里执行的语句很明显地快得多， 因为事务开始/提交（start/commit）需要大量的CPU和磁盘活动。 在一个 事务内部执行多条语句对于修改若干个相关的表的时候也是很有用的： 在所有相关的更新完成之前，其它会话看不到中间的状态。
.SH "PARAMETERS 参数"
.TP
\fBWORK\fR
.TP
\fBTRANSACTION\fR
 可选关键字。没什么作用。
.SH "NOTES 注意"
.PP
START TRANSACTION [\fBstart_transaction\fR(7)] 有着和 BEGIN 一样的功能。
.PP
 使用 COMMIT [\fBcommit\fR(7)] 或
ROLLBACK [\fBrollback\fR(7)]
结束一个事务。
.PP
 在一个现有事务块内部发出一个 BEGIN 将产生一个警告信息。 事务的状态将不会被影响。
.SH "EXAMPLES 例子"
.PP
 开始一个用户事务：
.sp
.nf
BEGIN;
.sp
.fi
.SH "COMPATIBILITY 兼容性"
.PP
\fBBEGIN\fR 是 PostgreSQL 语言的扩展。 在 SQL  标准中没有明确的 BEGIN  的定义；事务初始化总是隐含的而且使用一个 COMMIT 或者 ROLLBACK 语句终止。
.PP
 许多关系型数据库为了方便提供一个自动提交（autocommit）特性。
.PP
 顺便说一句，BEGIN 关键字在嵌入 SQL 里用于不同的目的。 我们建议你在移植数据库应用时仔细检查事务的语义。
.SH "SEE ALSO 参见"
COMMIT [\fBcommit\fR(7)], ROLLBACK [\fBrollback\fR(l)]

.SH "译者"
.B Postgresql 中文网站
.B 何伟平 <laser@pgsqldb.org>
