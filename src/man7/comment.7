. mso zh.tmac
.\" auto-generated by docbook2man-spec $Revision: 1.1 $
.TH "COMMENT" "7" "2003-11-02" "SQL - Language Statements" "SQL Commands"
.SH NAME
COMMENT \- 定义或者改变一个对象的评注

.SH SYNOPSIS
.sp
.nf
COMMENT ON
{
  TABLE \fIobject_name\fR |
  COLUMN \fItable_name\fR.\fIcolumn_name\fR |
  AGGREGATE \fIagg_name\fR (\fIagg_type\fR) |
  CONSTRAINT \fIconstraint_name\fR ON \fItable_name\fR |
  DATABASE \fIobject_name\fR |
  DOMAIN \fIobject_name\fR |
  FUNCTION \fIfunc_name\fR (\fIarg1_type\fR, \fIarg2_type\fR, ...) |
  INDEX \fIobject_name\fR |
  OPERATOR \fIop\fR (\fIleftoperand_type\fR, \fIrightoperand_type\fR) |
  RULE \fIrule_name\fR ON \fItable_name\fR |
  SCHEMA \fIobject_name\fR |
  SEQUENCE \fIobject_name\fR |
  TRIGGER \fItrigger_name\fR ON \fItable_name\fR |
  TYPE \fIobject_name\fR |
  VIEW \fIobject_name\fR
} IS \fI'text'\fR
.sp
.fi
.SH "DESCRIPTION 描述"
.PP
\fBCOMMENT\fR 存储一个数据库对象的评注， 这个评注可以很容易用 psql 的 \fB\\dd\fR, \fB\\d+\fR, 和 \fB\\l+\fR 命令检索出来。 其它检索评注的用户接口可以建设在 psql 所用地同样地内部函数的基础上， 也就是 obj_description() 和 col_description()。
.PP
 要修改一个评注，为同一个对象发出一条新的 COMMENT 命令即可。每个对象只存储一条评注。 要删除评注，在文本字串的位置写上 NULL。 当删除对象时，评注自动被删除掉。
.SH "PARAMETERS 参数"
.TP
\fB\fIobject_name\fB\fR
.TP
\fB\fItable_name.column_name\fB\fR
.TP
\fB\fIaggname\fB\fR
.TP
\fB\fIconstraint_name\fB\fR
.TP
\fB\fIfunc_name\fB\fR
.TP
\fB\fIop\fB\fR
.TP
\fB\fIrule_name\fB\fR
.TP
\fB\fItrigger_name\fB\fR
 要加入评注的对象名称。表，索引，序列，视图，类型，域，函数， 聚集和操作符的名字可以是模式修饰的。
.TP
agg_type
聚集函数的参数类型，如果函数接受任意数据类型，那么是 *。 
.TP
large_object_oid
大对象的 OID。 
.TP
PROCEDURAL
这个字无用。 
.TP
sourcetype
类型转换的源数据类型名字。 
.TP
targettype
类型转换的目的数据类型名字。 
.TP
\fB\fItext\fB\fR
新的评注。
.SH "NOTES 注意"
.PP
 一个数据库里的评注只能在改数据库里创建，并且只有在那个数据库里可见，其它库里不可见。
 
 需要说明的是目前评注没有安全机制：任何联接到某数据库上的用户都可以看到所有该数据库对象的评注 （尽管只有超级用户可以修改不属于他的对象的评注）。因此，不要在评注里放安全性敏感地信息。
.SH "EXAMPLES 例子"
.PP
 给表mytable 加评注：
.sp
.nf
COMMENT ON TABLE mytable IS 'This is my table.';
.sp
.fi
 再删除它：
.sp
.nf
COMMENT ON TABLE mytable IS NULL;
.sp
.fi
.PP
 一些例子：
.sp
.nf
COMMENT ON AGGREGATE my_aggregate (double precision) IS 'Computes sample variance';
COMMENT ON COLUMN my_table.my_column IS 'Employee ID number';
COMMENT ON DATABASE my_database IS 'Development Database';
COMMENT ON DOMAIN my_domain IS 'Email Address Domain';
COMMENT ON FUNCTION my_function (timestamp) IS 'Returns Roman Numeral';
COMMENT ON INDEX my_index IS 'Enforces uniqueness on employee ID';
COMMENT ON OPERATOR ^ (text, text) IS 'Performs intersection of two texts';
COMMENT ON OPERATOR ^ (NONE, text) IS 'This is a prefix operator on text';
COMMENT ON RULE my_rule ON my_table IS 'Logs updates of employee records';
COMMENT ON SCHEMA my_schema IS 'Departmental data';
COMMENT ON SEQUENCE my_sequence IS 'Used to generate primary keys';
COMMENT ON TABLE my_schema.my_table IS 'Employee Information';
COMMENT ON TRIGGER my_trigger ON my_table IS 'Used for RI';
COMMENT ON TYPE complex IS 'Complex number data type';
COMMENT ON VIEW my_view IS 'View of departmental costs';
.sp
.fi
.SH "COMPATIBILITY 兼容性"
.PP
SQL 标准里没有COMMENT。
.SH "译者"
.B Postgresql 中文网站
.B 何伟平 <laser@pgsqldb.org>
