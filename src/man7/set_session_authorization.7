. mso zh.tmac
.\" auto-generated by docbook2man-spec $Revision: 1.1 $
.TH "SET SESSION AUTHORIZATION" "7" "2003-11-02" "SQL - Language Statements" "SQL Commands"
.SH NAME
SET SESSION AUTHORIZATION \- 为当前会话设置会话用户标识符和当前用户标识符

.SH SYNOPSIS
.sp
.nf
SET [ SESSION | LOCAL ] SESSION AUTHORIZATION \fIusername\fR
SET [ SESSION | LOCAL ] SESSION AUTHORIZATION DEFAULT
RESET SESSION AUTHORIZATION
.sp
.fi
.SH "DESCRIPTION 描述"
.PP
 这条命令把当前 SQL 会话环境里的会话用户标识和当前用户标识设置为 username。 这个用户名可以写成一个标识符或者一个字串文本。 使用这个命令，我们可以临时变成一个非特权用户，稍后再切换回超级用户。
.PP
 会话用户标识符一开始设置为（可能经过认证的）客户端提供的用户名。 当前用户标识符通常等于会话用户标识符， 但是可能在 "setuid" 的环境里或者类似的机制里临时改变。 当前用户标识符和权限检查相关。
.PP
 只有在初始会话用户（\fI认证了的用户\fR）有超级用户权限的时候，会话用户标识符才能改变。 否则，只有在指定了被认证的用户名的情况下，系统才接受该命令。
.PP
SESSION 和 LOCAL 修饰词和普通 SET [\fBset\fR(7)]
命令里的作用相同。
.PP
DEFAULT 和 RESET 形式重置会话和当前用户标识符为初始认证的用户名。这些形式可以为任何用户执行。
.SH "EXAMPLES 例子"
.sp
.nf
SELECT SESSION_USER, CURRENT_USER;

 session_user | current_user 
--------------+--------------
 peter        | peter

SET SESSION AUTHORIZATION 'paul';

SELECT SESSION_USER, CURRENT_USER;

 session_user | current_user 
--------------+--------------
 paul         | paul
.sp
.fi
.SH "COMPATIBILITY 兼容性"
.PP
 SQL 标准允许一些其它的表达式出现在文本 username  的位置上，不过这个东西实际上并不重要。 PostgreSQL 允许标识符语法 （"username"），而 SQL 不允许。 SQL 不允许在一个事务的过程中用这条命令； PostgreSQL 没有这个限制，因为没有什么理由不允许这样用。 标准中表示执行这条命令的权限要求是具体实现定义的。
.SH "译者"
.B Postgresql 中文网站
.B 何伟平 <laser@pgsqldb.org>
