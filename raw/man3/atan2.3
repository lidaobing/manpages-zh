.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\" and Copyright 2008, Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified 1993-07-24 by Rik Faith (faith@cs.unc.edu)
.\" Modified 2002-07-27 by Walter Harms
.\" 	(walter.harms@informatik.uni-oldenburg.de)
.\"
.TH ATAN2 3  2010-09-20 "" "Linux Programmer's Manual"
.SH NAME
atan2, atan2f, atan2l \- arc tangent function of two variables
.SH SYNOPSIS
.nf
.B #include <math.h>

.BI "double atan2(double " y ", double " x );
.BI "float atan2f(float " y ", float " x );
.BI "long double atan2l(long double " y ", long double " x );

.fi
Link with \fI\-lm\fP.
.sp
.in -4n
Feature Test Macro Requirements for glibc (see
.BR feature_test_macros (7)):
.in
.sp
.ad l
.BR atan2f (),
.BR atan2l ():
.RS
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE\ >=\ 600 || _ISOC99_SOURCE ||
_POSIX_C_SOURCE\ >=\ 200112L;
.br
or
.I cc\ -std=c99
.RE
.ad b
.SH DESCRIPTION
The
.BR atan2 ()
function calculates the principal value of the arc tangent of
.IR y/x ,
using the signs of the two arguments to determine
the quadrant of the result.
.SH RETURN VALUE
On success, these functions return the principal value of the arc tangent of
.IR y/x
in radians; the return value is in the range [\-pi,\ pi].

If
.I y
is +0 (\-0) and
.I x
is less than 0, +pi (\-pi) is returned.

If
.I y
is +0 (\-0) and
.I x
is greater than 0, +0 (\-0) is returned.

If
.I y
is less than 0 and
.I x
is +0 or \-0, \-pi/2 is returned.

If
.I y
is greater than 0 and
.I x
is +0 or \-0, pi/2 is returned.

.\" POSIX.1 says:
.\" If
.\" .I x
.\" is 0, a pole error shall not occur.
.\"
If either
.I x
or
.I y
is NaN, a NaN is returned.

.\" POSIX.1 says:
.\" If the result underflows, a range error may occur and
.\" .I y/x
.\" should be returned.
.\"
If
.I y
is +0 (\-0) and
.I x
is \-0, +pi (\-pi) is returned.

If
.I y
is +0 (\-0) and
.I x
is +0, +0 (\-0) is returned.

If
.I y
is a finite value greater (less) than 0, and
.I x
is negative infinity, +pi (\-pi) is returned.

If
.I y
is a finite value greater (less) than 0, and
.I x
is positive infinity, +0 (\-0) is returned.

If
.I y
is positive infinity (negative infinity), and
.I x
is finite,
pi/2 (\-pi/2) is returned.

If
.I y
is positive infinity (negative infinity) and
.I x
is negative infinity, +3*pi/4 (\-3*pi/4) is returned.

If
.I y
is positive infinity (negative infinity) and
.I x
is positive infinity, +pi/4 (\-pi/4) is returned.
.\"
.\" POSIX.1 says:
.\" If both arguments are 0, a domain error shall not occur.
.SH ERRORS
No errors occur.
.\" POSIX.1 documents an optional underflow error
.\" glibc 2.8 does not do this.
.SH CONFORMING TO
C99, POSIX.1-2001.
The variant returning
.I double
also conforms to
SVr4, 4.3BSD, C89.
.SH SEE ALSO
.BR acos (3),
.BR asin (3),
.BR atan (3),
.BR carg (3),
.BR cos (3),
.BR sin (3),
.BR tan (3)
