.\" Copyright (c) 2009 Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.TH PTHREAD_KILL 3 2012-08-19 "Linux" "Linux Programmer's Manual"
.SH NAME
pthread_kill \- send a signal to a thread
.SH SYNOPSIS
.nf
.B #include <signal.h>

.BI "int pthread_kill(pthread_t " thread ", int " sig );
.fi
.sp
Compile and link with \fI\-pthread\fP.
.SH DESCRIPTION
The
.BR pthread_kill ()
function sends the signal
.I sig
to
.IR thread ,
a thread in the same process as the caller.
The signal is asynchronously directed to
.IR thread .

If
.I sig
is 0, then no signal is sent, but error checking is still performed;
this can be used to check for the existence of a thread ID.
.SH RETURN VALUE
On success,
.BR pthread_kill ()
returns 0;
on error, it returns an error number, and no signal is sent.
.SH ERRORS
.TP
.B EINVAL
An invalid signal was specified.
.TP
.B ESRCH
No thread with the ID
.I thread
could be found.
.SH CONFORMING TO
POSIX.1-2001.
.SH NOTES
Signal dispositions are process-wide:
if a signal handler is installed,
the handler will be invoked in the thread
.IR thread ,
but if the disposition of the signal is "stop", "continue", or "terminate",
this action will affect the whole process.
.SH SEE ALSO
.BR kill (2),
.BR sigaction (2),
.BR sigpending (2),
.BR pthread_self (3),
.BR pthread_sigmask (3),
.BR raise (3),
.BR pthreads (7),
.BR signal (7)
