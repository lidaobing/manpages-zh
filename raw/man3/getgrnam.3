.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\"
.\" Modified 1993-07-24 by Rik Faith (faith@cs.unc.edu)
.\" Modified 2003-11-15 by aeb
.\"
.TH GETGRNAM 3 2013-07-22 "" "Linux Programmer's Manual"
.SH NAME
getgrnam, getgrnam_r, getgrgid, getgrgid_r \- get group file entry
.SH SYNOPSIS
.nf
.B #include <sys/types.h>
.B #include <grp.h>
.sp
.BI "struct group *getgrnam(const char *" name );
.sp
.BI "struct group *getgrgid(gid_t " gid );
.sp
.BI "int getgrnam_r(const char *" name ", struct group *" grp ,
.br
.BI "          char *" buf ", size_t " buflen ", struct group **" result );
.sp
.BI "int getgrgid_r(gid_t " gid ", struct group *" grp ,
.br
.BI "          char *" buf ", size_t " buflen ", struct group **" result );
.fi
.sp
.in -4n
Feature Test Macro Requirements for glibc (see
.BR feature_test_macros (7)):
.ad l
.in
.sp
.BR getgrnam_r (),
.BR getgrgid_r ():
.RS 4
_POSIX_C_SOURCE\ >=\ 1 || _XOPEN_SOURCE || _BSD_SOURCE ||
_SVID_SOURCE || _POSIX_SOURCE
.RE
.ad b
.SH DESCRIPTION
The
.BR getgrnam ()
function returns a pointer to a structure containing
the broken-out fields of the record in the group database
(e.g., the local group file
.IR /etc/group ,
NIS, and LDAP)
that matches the group name
.IR name .
.PP
The
.BR getgrgid ()
function returns a pointer to a structure containing
the broken-out fields of the record in the group database
that matches the group ID
.IR gid .
.PP
The \fIgroup\fP structure is defined in \fI<grp.h>\fP as follows:
.sp
.in +4n
.nf
struct group {
    char   *gr_name;       /* group name */
    char   *gr_passwd;     /* group password */
    gid_t   gr_gid;        /* group ID */
    char  **gr_mem;        /* group members */
};
.fi
.in
.PP
For more information about the fields of this structure, see
.BR group (5).
.PP
The
.BR getgrnam_r ()
and
.BR getgrgid_r ()
functions obtain the same information as
.BR getgrnam ()
and
.BR getgrgid (),
but store the retrieved
.I group
structure
in the space pointed to by
.IR grp .
The string fields pointed to by the members of the
.I group
structure are stored in the buffer
.I buf
of size
.IR buflen .
A pointer to the result (in case of success) or NULL (in case no entry
was found or an error occurred) is stored in
.IR *result .
.PP
The call

    sysconf(_SC_GETGR_R_SIZE_MAX)

returns either \-1, without changing
.IR errno ,
or an initial suggested size for
.IR buf .
(If this size is too small,
the call fails with
.BR ERANGE ,
in which case the caller can retry with a larger buffer.)
.SH RETURN VALUE
The
.BR getgrnam ()
and
.BR getgrgid ()
functions return a pointer to a
.I group
structure, or NULL if the matching entry
is not found or an error occurs.
If an error occurs,
.I errno
is set appropriately.
If one wants to check
.I errno
after the call, it should be set to zero before the call.
.LP
The return value may point to a static area, and may be overwritten
by subsequent calls to
.BR getgrent (3),
.BR getgrgid (),
or
.BR getgrnam ().
(Do not pass the returned pointer to
.BR free (3).)
.LP
On success,
.BR getgrnam_r ()
and
.BR getgrgid_r ()
return zero, and set
.IR *result
to
.IR grp .
If no matching group record was found,
these functions return 0 and store NULL in
.IR *result .
In case of error, an error number is returned, and NULL is stored in
.IR *result .
.SH ERRORS
.TP
.BR 0 " or " ENOENT " or " ESRCH " or " EBADF " or " EPERM " or ... "
The given
.I name
or
.I gid
was not found.
.TP
.B EINTR
A signal was caught.
.TP
.B EIO
I/O error.
.TP
.B EMFILE
The maximum number
.RB ( OPEN_MAX )
of files was open already in the calling process.
.TP
.B ENFILE
The maximum number of files was open already in the system.
.TP
.B ENOMEM
.\" not in POSIX
Insufficient memory to allocate
.I group
structure.
.\" to allocate the group structure, or to allocate buffers
.TP
.B ERANGE
Insufficient buffer space supplied.
.SH FILES
.TP
.I /etc/group
local group database file
.SH ATTRIBUTES
.SS Multithreading (see pthreads(7))
The
.BR getgrnam ()
and
.BR getgrgid ()
functions are not thread-safe.
.LP
The
.BR getgrnam_r ()
and
.BR getgrgid_r ()
functions are thread-safe.
.SH CONFORMING TO
SVr4, 4.3BSD, POSIX.1-2001.
.SH NOTES
The formulation given above under "RETURN VALUE" is from POSIX.1-2001.
It does not call "not found" an error, hence does not specify what value
.I errno
might have in this situation.
But that makes it impossible to recognize
errors.
One might argue that according to POSIX
.I errno
should be left unchanged if an entry is not found.
Experiments on various
UNIX-like systems shows that lots of different values occur in this
situation: 0, ENOENT, EBADF, ESRCH, EWOULDBLOCK, EPERM and probably others.
.\" more precisely:
.\" AIX 5.1 - gives ESRCH
.\" OSF1 4.0g - gives EWOULDBLOCK
.\" libc, glibc up to version 2.6, Irix 6.5 - give ENOENT
.\" glibc since version 2.7 - give 0
.\" FreeBSD 4.8, OpenBSD 3.2, NetBSD 1.6 - give EPERM
.\" SunOS 5.8 - gives EBADF
.\" Tru64 5.1b, HP-UX-11i, SunOS 5.7 - give 0
.SH SEE ALSO
.BR endgrent (3),
.BR fgetgrent (3),
.BR getgrent (3),
.BR getpwnam (3),
.BR setgrent (3),
.BR group (5)
