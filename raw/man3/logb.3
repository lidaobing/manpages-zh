.\" Copyright 2004 Andries Brouwer <aeb@cwi.nl>.
.\" and Copyright 2008, Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" Inspired by a page by Walter Harms created 2002-08-10
.\"
.TH LOGB 3 2010-09-20 "" "Linux Programmer's Manual"
.SH NAME
logb, logbf, logbl \- get exponent of a floating-point value
.SH SYNOPSIS
.B #include <math.h>
.sp
.BI "double logb(double " x );
.br
.BI "float logbf(float " x );
.br
.BI "long double logbl(long double " x );
.sp
Link with \fI\-lm\fP.
.sp
.in -4n
Feature Test Macro Requirements for glibc (see
.BR feature_test_macros (7)):
.in
.sp
.ad l
.BR logb ():
.RS 4
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE\ >=\ 500 ||
_XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED || _ISOC99_SOURCE ||
_POSIX_C_SOURCE\ >=\ 200112L;
.br
or
.I cc\ -std=c99
.RE
.br
.BR logbf (),
.BR logbl ():
.RS 4
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE\ >=\ 600 || _ISOC99_SOURCE ||
_POSIX_C_SOURCE\ >=\ 200112L;
.br
or
.I cc\ -std=c99
.RE
.ad b
.SH DESCRIPTION
These functions extract the exponent from the
internal floating-point representation of
.I x
and return it as a floating-point value.
The integer constant
.BR FLT_RADIX ,
defined in
.IR <float.h> ,
indicates the radix used for the system's floating-point representation.
If
.B FLT_RADIX
is 2,
.BI logb( x )
is equal to
.BI floor(log2( x ))\fR,
except that it is probably faster.
.LP
If
.I x
is subnormal,
.BR logb ()
returns the exponent
.I x
would have if it were normalized.
.SH RETURN VALUE
On success, these functions return the exponent of
.IR x .

If
.I x
is a NaN,
a NaN is returned.

If
.I x
is zero, then a pole error occurs, and the functions return
.RB - HUGE_VAL ,
.RB - HUGE_VALF ,
or
.RB - HUGE_VALL ,
respectively.

If
.I x
is negative infinity or positive infinity, then
positive infinity is returned.
.SH ERRORS
See
.BR math_error (7)
for information on how to determine whether an error has occurred
when calling these functions.
.PP
The following errors can occur:
.TP
Pole error: \fIx\fP is 0
.\" .I errno
.\" is set to
.\" .BR ERANGE .
A divide-by-zero floating-point exception
.RB ( FE_DIVBYZERO )
is raised.
.PP
These functions do not set
.IR errno .
.\" FIXME . Is it intentional that these functions do not set errno?
.\" log(), log2(), log10() do set errno
.\" Bug raised: http://sources.redhat.com/bugzilla/show_bug.cgi?id=6793
.\"
.\" .SH HISTORY
.\" The
.\" .BR logb ()
.\" function occurs in 4.3BSD.
.\" see IEEE.3 in the 4.3BSD manual
.SH CONFORMING TO
C99, POSIX.1-2001.
.SH SEE ALSO
.BR ilogb (3),
.BR log (3)
