.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 19:26:03 1993 by Rik Faith (faith@cs.unc.edu)
.TH GETPROTOENT 3  2008-08-19 "GNU" "Linux Programmer's Manual"
.SH NAME
getprotoent, getprotobyname, getprotobynumber, setprotoent,
endprotoent \- get protocol entry
.SH SYNOPSIS
.nf
.B #include <netdb.h>
.sp
.B struct protoent *getprotoent(void);
.sp
.BI "struct protoent *getprotobyname(const char *" name );
.sp
.BI "struct protoent *getprotobynumber(int " proto );
.sp
.BI "void setprotoent(int " stayopen );
.sp
.B void endprotoent(void);
.fi
.SH DESCRIPTION
The
.BR getprotoent ()
function reads the next entry from the protocols database (see
.BR protocols (5))
and returns a
.I protoent
structure
containing the broken-out fields from the entry.
A connection is opened to the database if necessary.
.PP
The
.BR getprotobyname ()
function returns a
.I protoent
structure
for the entry from the database
that matches the protocol name
.IR name .
A connection is opened to the database if necessary.
.PP
The
.BR getprotobynumber ()
function returns a
.I protoent
structure
for the entry from the database
that matches the protocol number
.IR number .
A connection is opened to the database if necessary.
.PP
The
.BR setprotoent ()
function opens a connection to the database,
and sets the next entry to the first entry.
If
.I stayopen
is nonzero,
then the connection to the database
will not be closed between calls to one of the
.BR getproto* ()
functions.
.PP
The
.BR endprotoent ()
function closes the connection to the database.
.PP
The
.I protoent
structure is defined in
.I <netdb.h>
as follows:
.sp
.in +4n
.nf
struct protoent {
    char  *p_name;       /* official protocol name */
    char **p_aliases;    /* alias list */
    int    p_proto;      /* protocol number */
}
.fi
.in
.PP
The members of the
.I protoent
structure are:
.TP
.I p_name
The official name of the protocol.
.TP
.I p_aliases
A NULL-terminated list of alternative names for the protocol.
.TP
.I p_proto
The protocol number.
.SH RETURN VALUE
The
.BR getprotoent (),
.BR getprotobyname ()
and
.BR getprotobynumber ()
functions return a pointer to a
statically allocated
.I protoent
structure, or a NULL pointer if an
error occurs or the end of the file is reached.
.SH FILES
.PD 0
.TP
.I /etc/protocols
protocol database file
.PD
.SH CONFORMING TO
4.3BSD, POSIX.1-2001.
.SH SEE ALSO
.BR getnetent (3),
.BR getprotoent_r (3),
.BR getservent (3),
.BR protocols (5)
