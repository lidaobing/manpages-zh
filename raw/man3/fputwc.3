.\" Copyright (c) Bruno Haible <haible@clisp.cons.org>
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_ONEPARA)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"   GNU glibc-2 source code and manual
.\"   Dinkumware C library reference http://www.dinkumware.com/
.\"   OpenGroup's Single UNIX specification http://www.UNIX-systems.org/online.html
.\"   ISO/IEC 9899:1999
.\"
.TH FPUTWC 3  2013-04-19 "GNU" "Linux Programmer's Manual"
.SH NAME
fputwc, putwc \- write a wide character to a FILE stream
.SH SYNOPSIS
.nf
.B #include <stdio.h>
.br
.B #include <wchar.h>
.sp
.BI "wint_t fputwc(wchar_t " wc ", FILE *" stream );
.BI "wint_t putwc(wchar_t " wc ", FILE *" stream );
.fi
.SH DESCRIPTION
The
.BR fputwc ()
function is the wide-character
equivalent of the
.BR fputc (3)
function.
It writes the wide character \fIwc\fP to \fIstream\fP.
If
\fIferror(stream)\fP becomes true, it returns
.BR WEOF .
If a wide-character conversion error occurs,
it sets \fIerrno\fP to \fBEILSEQ\fP and returns
.BR WEOF .
Otherwise it returns \fIwc\fP.
.PP
The
.BR putwc ()
function or macro functions identically to
.BR fputwc ().
It may be implemented as a macro, and may evaluate its argument
more than once.
There is no reason ever to use it.
.PP
For nonlocking counterparts, see
.BR unlocked_stdio (3).
.SH RETURN VALUE
The
.BR fputwc ()
function returns \fIwc\fP if no error occurred, or
.B WEOF
to indicate an error.
In the event of an error,
.I errno
is set to indicate the cause.
.SH ERRORS
Apart from the usual ones, there is
.TP
.B EILSEQ
Conversion of \fIwc\fP to the stream's encoding fails.
.SH CONFORMING TO
C99, POSIX.1-2001.
.SH NOTES
The behavior of
.BR fputwc ()
depends on the
.B LC_CTYPE
category of the
current locale.
.PP
In the absence of additional information passed to the
.BR fopen (3)
call, it is
reasonable to expect that
.BR fputwc ()
will actually write the multibyte
sequence corresponding to the wide character \fIwc\fP.
.SH SEE ALSO
.BR fgetwc (3),
.BR fputws (3),
.BR unlocked_stdio (3)
