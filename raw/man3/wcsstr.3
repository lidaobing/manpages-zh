.\" Copyright (c) Bruno Haible <haible@clisp.cons.org>
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_ONEPARA)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"   GNU glibc-2 source code and manual
.\"   Dinkumware C library reference http://www.dinkumware.com/
.\"   OpenGroup's Single UNIX specification http://www.UNIX-systems.org/online.html
.\"   ISO/IEC 9899:1999
.\"
.TH WCSSTR 3  2011-09-28 "GNU" "Linux Programmer's Manual"
.SH NAME
wcsstr \- locate a substring in a wide-character string
.SH SYNOPSIS
.nf
.B #include <wchar.h>
.sp
.BI "wchar_t *wcsstr(const wchar_t *" haystack ", const wchar_t *" needle );
.fi
.SH DESCRIPTION
The
.BR wcsstr ()
function is the wide-character equivalent of the
.BR strstr (3)
function.
It searches for the first occurrence of the wide-character string
.I needle
(without its terminating null wide character (L\(aq\\0\(aq))
as a substring in the wide-character string
.IR haystack .
.SH RETURN VALUE
The
.BR wcsstr ()
function returns a pointer to the first occurrence of
.I needle
in
.IR haystack .
It returns NULL if
.I needle
does not occur
as a substring in
.IR haystack .
.PP
Note the special case:
If
.I needle
is the empty wide-character string,
the return value is always
.I haystack
itself.
.SH CONFORMING TO
C99.
.SH SEE ALSO
.BR strstr (3),
.BR wcschr (3)
