.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\" and Copyright (c) 2008 Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" Modified Mon Apr 12 12:49:57 1993, David Metcalfe
.\" Modified Sat Jul 24 18:56:22 1993, Rik Faith (faith@cs.unc.edu)
.\" Modified Wed Feb 20 21:09:36 2002, Ian Redfern (redferni@logica.com)
.\" 2008-07-09, mtk, add rawmemchr()
.\"
.TH MEMCHR 3  2012-04-23 "" "Linux Programmer's Manual"
.SH NAME
memchr, memrchr, rawmemchr \- scan memory for a character
.SH SYNOPSIS
.nf
.B #include <string.h>

.BI "void *memchr(const void *" s ", int " c ", size_t " n );

.BI "void *memrchr(const void *" s ", int " c ", size_t " n );

.BI "void *rawmemchr(const void *" s ", int " c );
.fi
.sp
.in -4n
Feature Test Macro Requirements for glibc (see
.BR feature_test_macros (7)):
.in
.sp
.BR memrchr (),
.BR rawmemchr ():
_GNU_SOURCE
.SH DESCRIPTION
The
.BR memchr ()
function scans the initial
.I n
bytes of the memory
area pointed to by
.I s
for the first instance of
.IR c .
Both
.I c
and the bytes of the memory area pointed to by
.I s
are interpreted as
.IR "unsigned char" .
.PP
The
.BR memrchr ()
function is like the
.BR memchr ()
function,
except that it searches backward from the end of the
.I n
bytes pointed to by
.I s
instead of forward from the beginning.

The
.BR rawmemchr ()
function is similar to
.BR memchr ():
it assumes (i.e., the programmer knows for certain)
that an instance of
.I c
lies somewhere in the memory area starting at the location pointed to by
.IR s ,
and so performs an optimized search for
.IR c
(i.e., no use of a count argument to limit the range of the search).
If an instance of
.I c
is not found, the results are unpredictable.
The following call is a fast means of locating a string's
terminating null byte:
.in +4n
.nf

char *p = rawmemchr(s,\ \(aq\\0\(aq);
.fi
.in
.SH RETURN VALUE
The
.BR memchr ()
and
.BR memrchr ()
functions return a pointer
to the matching byte or NULL if the character does not occur in
the given memory area.

The
.BR rawmemchr ()
function returns a pointer to the matching byte, if one is found.
If no matching byte is found, the result is unspecified.
.SH VERSIONS
.BR rawmemchr ()
first appeared in glibc in version 2.1.

.BR memrchr ()
first appeared in glibc in version 2.2.
.SH CONFORMING TO
The
.BR memchr ()
function conforms to SVr4, 4.3BSD, C89, C99, POSIX.1-2001.

The
.BR memrchr ()
function is a GNU extension, available since glibc 2.1.91.

The
.BR rawmemchr ()
function is a GNU extension, available since glibc 2.1.
.SH SEE ALSO
.BR ffs (3),
.BR index (3),
.BR rindex (3),
.BR strchr (3),
.BR strpbrk (3),
.BR strrchr (3),
.BR strsep (3),
.BR strspn (3),
.BR strstr (3),
.BR wmemchr (3)
