.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified 1993-07-24 by Rik Faith (faith@cs.unc.edu)
.\" Modified 2002-07-27 by Walter Harms
.\" 	(walter.harms@informatik.uni-oldenburg.de)
.\"
.TH HYPOT 3 2010-09-20 ""  "Linux Programmer's Manual"
.SH NAME
hypot, hypotf, hypotl \- Euclidean distance function
.SH SYNOPSIS
.nf
.B #include <math.h>
.sp
.BI "double hypot(double " x ", double " y );
.br
.BI "float hypotf(float " x ", float " y );
.br
.BI "long double hypotl(long double " x ", long double " y );
.fi
.sp
Link with \fI\-lm\fP.
.sp
.in -4n
Feature Test Macro Requirements for glibc (see
.BR feature_test_macros (7)):
.in
.sp
.ad l
.BR hypot ():
.RS 4
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE || _ISOC99_SOURCE ||
_POSIX_C_SOURCE\ >=\ 200112L;
.br
or
.I cc\ -std=c99
.RE
.br
.BR hypotf (),
.BR hypotl ():
.RS 4
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE\ >=\ 600 || _ISOC99_SOURCE ||
_POSIX_C_SOURCE\ >=\ 200112L;
.br
or
.I cc\ -std=c99
.RE
.ad b
.SH DESCRIPTION
The
.BR hypot ()
function returns
.RI sqrt( x * x + y * y ).
This is the length of the hypotenuse of a right-angled triangle
with sides of length
.I x
and
.IR y ,
or the distance of the point
.RI ( x , y )
from the origin.

The calculation is performed without undue overflow or underflow
during the intermediate steps of the calculation.
.\" e.g., hypot(DBL_MIN, DBL_MIN) does the right thing, as does, say
.\" hypot(DBL_MAX/2.0, DBL_MAX/2.0).
.SH RETURN VALUE
On success, these functions return the length of a right-angled triangle
with sides of length
.I x
and
.IR y .

If
.I x
or
.I y
is an infinity,
positive infinity is returned.

If
.I x
or
.I y
is a NaN,
and the other argument is not an infinity,
a NaN is returned.

If the result overflows,
a range error occurs,
and the functions return
.BR HUGE_VAL ,
.BR HUGE_VALF ,
or
.BR HUGE_VALL ,
respectively.

If both arguments are subnormal, and the result is subnormal,
.\" Actually, could the result not be subnormal if both arguments
.\" are subnormal?  I think not -- mtk, Jul 2008
a range error occurs,
and the correct result is returned.
.SH ERRORS
See
.BR math_error (7)
for information on how to determine whether an error has occurred
when calling these functions.
.PP
The following errors can occur:
.TP
Range error: result overflow
.I errno
is set to
.BR ERANGE .
An overflow floating-point exception
.RB ( FE_OVERFLOW )
is raised.
.TP
Range error: result underflow
.\" .I errno
.\" is set to
.\" .BR ERANGE .
An underflow floating-point exception
.RB ( FE_UNDERFLOW )
is raised.
.IP
These functions do not set
.IR errno
for this case.
.\" FIXME . Is it intentional that these functions do not set errno?
.\" They do set errno for the overflow case.
.\" Bug raised: http://sources.redhat.com/bugzilla/show_bug.cgi?id=6795
.SH CONFORMING TO
C99, POSIX.1-2001.
The variant returning
.I double
also conforms to
SVr4, 4.3BSD.
.SH SEE ALSO
.BR cabs (3),
.BR sqrt (3)
