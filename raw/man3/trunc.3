.\" Copyright (C) 2001 Andries Brouwer <aeb@cwi.nl>.
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.TH TRUNC 3  2013-06-21 "" "Linux Programmer's Manual"
.SH NAME
trunc, truncf, truncl \- round to integer, toward zero
.SH SYNOPSIS
.nf
.B #include <math.h>
.sp
.BI "double trunc(double " x );
.br
.BI "float truncf(float " x );
.br
.BI "long double truncl(long double " x );
.fi
.sp
Link with \fI\-lm\fP.
.sp
.in -4n
Feature Test Macro Requirements for glibc (see
.BR feature_test_macros (7)):
.in
.sp
.ad l
.BR trunc (),
.BR truncf (),
.BR truncl ():
.RS 4
_XOPEN_SOURCE\ >=\ 600 || _ISOC99_SOURCE ||
_POSIX_C_SOURCE\ >=\ 200112L;
.br
or
.I cc\ -std=c99
.RE
.ad
.SH DESCRIPTION
These functions round
.I x
to the nearest integer
not larger in absolute value.
.SH RETURN VALUE
These functions return the rounded integer value.

If
.IR x
is integral, infinite, or NaN,
.I x
itself is returned.
.SH ERRORS
No errors occur.
.SH VERSIONS
These functions first appeared in glibc in version 2.1.
.SH ATTRIBUTES
.SS Multithreading (see pthreads(7))
The
.BR trunc (),
.BR truncf (),
and
.BR truncl ()
functions are thread-safe.
.SH CONFORMING TO
C99, POSIX.1-2001.
.SH NOTES
The integral value returned by these functions may be too large
to store in an integer type
.RI ( int ,
.IR long ,
etc.).
To avoid an overflow, which will produce undefined results,
an application should perform a range check on the returned value
before assigning it to an integer type.
.SH SEE ALSO
.BR ceil (3),
.BR floor (3),
.BR lrint (3),
.BR nearbyint (3),
.BR rint (3),
.BR round (3)
