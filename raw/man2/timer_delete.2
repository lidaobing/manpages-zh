.\" Copyright (c) 2009 Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.TH TIMER_DELETE 2 2009-02-20 Linux "Linux Programmer's Manual"
.SH NAME
timer_delete \- delete a POSIX per-process timer
.SH SYNOPSIS
.nf
.B  #include <time.h>

.BI "int timer_delete(timer_t " timerid );
.fi

Link with \fI\-lrt\fP.
.sp
.in -4n
Feature Test Macro Requirements for glibc (see
.BR feature_test_macros (7)):
.in
.sp
.BR timer_delete ():
_POSIX_C_SOURCE\ >=\ 199309L
.SH DESCRIPTION
.BR timer_delete ()
deletes the timer whose ID is given in
.IR timerid .
If the timer was armed at the time of this call,
it is disarmed before being deleted.
The treatment of any pending signal generated by the deleted timer
is unspecified.
.SH RETURN VALUE
On success,
.BR timer_delete ()
returns 0.
On failure, \-1 is returned, and
.I errno
is set to indicate the error.
.SH ERRORS
.TP
.B EINVAL
.I timerid
is not a valid timer ID.
.SH VERSIONS
This system call is available since Linux 2.6.
.SH CONFORMING TO
POSIX.1-2001.
.SH SEE ALSO
.BR clock_gettime (2),
.BR timer_create (2),
.BR timer_getoverrun (2),
.BR timer_settime (2),
.BR time (7)
