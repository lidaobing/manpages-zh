.\" This manpage is Copyright (C) 2006, Michael Kerrisk
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.TH SYMLINKAT 2 2012-05-04 "Linux" "Linux Programmer's Manual"
.SH NAME
symlinkat \- create a symbolic link relative to a directory file descriptor
.SH SYNOPSIS
.nf
.B #include <fcntl.h>           /* Definition of AT_* constants */
.B #include <unistd.h>
.sp
.BI "int symlinkat(const char *" oldpath ", int " newdirfd \
", const char *" newpath );
.fi
.sp
.in -4n
Feature Test Macro Requirements for glibc (see
.BR feature_test_macros (7)):
.in
.sp
.BR symlinkat ():
.PD 0
.ad l
.RS 4
.TP 4
Since glibc 2.10:
_XOPEN_SOURCE\ >=\ 700 || _POSIX_C_SOURCE\ >=\ 200809L
.TP
Before glibc 2.10:
_ATFILE_SOURCE
.RE
.ad
.PD
.SH DESCRIPTION
The
.BR symlinkat ()
system call operates in exactly the same way as
.BR symlink (2),
except for the differences described in this manual page.

If the pathname given in
.I newpath
is relative, then it is interpreted relative to the directory
referred to by the file descriptor
.I newdirfd
(rather than relative to the current working directory of
the calling process, as is done by
.BR symlink (2)
for a relative pathname).

If
.I newpath
is relative and
.I newdirfd
is the special value
.BR AT_FDCWD ,
then
.I newpath
is interpreted relative to the current working
directory of the calling process (like
.BR symlink (2)).

If
.I newpath
is absolute, then
.I newdirfd
is ignored.
.SH RETURN VALUE
On success,
.BR symlinkat ()
returns 0.
On error, \-1 is returned and
.I errno
is set to indicate the error.
.SH ERRORS
The same errors that occur for
.BR symlink (2)
can also occur for
.BR symlinkat ().
The following additional errors can occur for
.BR symlinkat ():
.TP
.B EBADF
.I newdirfd
is not a valid file descriptor.
.TP
.B ENOTDIR
.I newpath
is relative and
.I newdirfd
is a file descriptor referring to a file other than a directory.
.SH VERSIONS
.BR symlinkat ()
was added to Linux in kernel 2.6.16;
library support was added to glibc in version 2.4.
.SH CONFORMING TO
POSIX.1-2008.
.SH NOTES
See
.BR openat (2)
for an explanation of the need for
.BR symlinkat ().
.SH SEE ALSO
.BR openat (2),
.BR symlink (2),
.BR path_resolution (7),
.BR symlink (7)
