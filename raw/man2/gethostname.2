.\" Copyright 1993 Rickard E. Faith (faith@cs.unc.edu)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" Modified 1995-07-22 by Michael Chastain <mec@duracef.shout.net>:
.\"   'gethostname' is real system call on Linux/Alpha.
.\" Modified 1997-01-31 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified 2000-06-04, 2001-12-15 by aeb
.\" Modified 2004-06-17 by mtk
.\" Modified 2008-11-27 by mtk
.\"
.TH GETHOSTNAME 2 2010-09-26 "Linux" "Linux Programmer's Manual"
.SH NAME
gethostname, sethostname \- get/set hostname
.SH SYNOPSIS
.B #include <unistd.h>
.sp
.BI "int gethostname(char *" name ", size_t " len );
.br
.BI "int sethostname(const char *" name ", size_t " len );
.sp
.in -4n
Feature Test Macro Requirements for glibc (see
.BR feature_test_macros (7)):
.in
.sp
.ad l
.PD 0
.BR gethostname ():
.RS 4
Since glibc 2.12:
_BSD_SOURCE || _XOPEN_SOURCE\ >=\ 500
.br
|| /* Since glibc 2.12: */ _POSIX_C_SOURCE\ >=\ 200112L
.RE
.br
.BR sethostname ():
.RS 4
_BSD_SOURCE || (_XOPEN_SOURCE && _XOPEN_SOURCE\ <\ 500)
.RE
.PD
.ad
.SH DESCRIPTION
These system calls are used to access or to change the hostname of the
current processor.

.BR sethostname ()
sets the hostname to the value given in the character array
.IR name .
The
.I len
argument specifies the number of bytes in
.IR name .
(Thus,
.I name
does not require a terminating null byte.)

.BR gethostname ()
returns the null-terminated hostname in the character array
.IR name ,
which has a length of
.I len
bytes.
If the null-terminated hostname is too large to fit,
then the name is truncated, and no error is returned (but see NOTES below).
POSIX.1-2001 says that if such truncation occurs,
then it is unspecified whether the returned buffer
includes a terminating null byte.
.SH RETURN VALUE
On success, zero is returned.
On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
.TP
.B EFAULT
.I name
is an invalid address.
.TP
.B EINVAL
.I len
is negative
.\" Can't occur for gethostbyname() wrapper, since 'len' has an
.\" unsigned type; can occur for the underlying system call.
or, for
.BR sethostname (),
.I len
is larger than the maximum allowed size.
.TP
.B ENAMETOOLONG
.RB "(glibc " gethostname ())
.I len
is smaller than the actual size.
(Before version 2.1, glibc uses
.BR EINVAL
for this case.)
.TP
.B EPERM
For
.BR sethostname (),
the caller did not have the
.B CAP_SYS_ADMIN
capability.
.SH CONFORMING TO
SVr4, 4.4BSD  (these interfaces first appeared in 4.2BSD).
POSIX.1-2001 specifies
.BR gethostname ()
but not
.BR sethostname ().
.SH NOTES
SUSv2 guarantees that "Host names are limited to 255 bytes".
POSIX.1-2001 guarantees that "Host names (not including
the terminating null byte) are limited to
.B HOST_NAME_MAX
bytes".
On Linux,
.B HOST_NAME_MAX
is defined with the value 64, which has been the limit since Linux 1.0
(earlier kernels imposed a limit of 8 bytes).
.SS Glibc notes
The GNU C library does not employ the
.BR gethostname ()
system call; instead, it implements
.BR gethostname ()
as a library function that calls
.BR uname (2)
and copies up to
.I len
bytes from the returned
.I nodename
field into
.IR name .
Having performed the copy, the function then checks if the length of the
.I nodename
was greater than or equal to
.IR len ,
and if it is, then the function returns \-1 with
.I errno
set to
.BR ENAMETOOLONG ;
in this case, a terminating null byte is not included in the returned
.IR name .

Versions of glibc before 2.2
.\" At least glibc 2.0 and 2.1, older versions not checked
handle the case where the length of the
.I nodename
was greater than or equal to
.I len
differently: nothing is copied into
.I name
and the function returns \-1 with
.I errno
set to
.BR ENAMETOOLONG .
.SH SEE ALSO
.BR getdomainname (2),
.BR setdomainname (2),
.BR uname (2)
